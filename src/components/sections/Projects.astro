---
import Article from "@components/article/Article.astro";
import { getCollection } from "astro:content";
import H2 from "@components/headings/H2.astro";
import Section from "@components/article/Section.astro";
import AnchorNavigationText from "../ui/AnchorNavigationText.astro";
import type { lang } from "@src/types";

interface Props {
    lang: lang;
}

const { lang } = Astro.props as Props;

const projects = await getCollection("projects");
const projectsSorted = projects
    // filter jobs by locale
    .filter((job) => job.id.startsWith(`${lang}/`))
    // sort by order
    .sort((a, b) => {
        if (a.data.order && b.data.order) {
            return a.data.order - b.data.order;
        }
        return 0;
    });

const allProjectsText = lang === "es" ? "Todos los proyectos" : "All Projects";
const allProjectsHref = lang === "es" ? "/es/projects" : "/projects";
const isLastProject = (index: number) => {
    return ++index === projectsSorted.length;
};
---

<Section
    class:list={["content-visibility-auto"]}
    ariaLabel={lang === "es" ? "Proyectos" : "Projects"}
>
    <H2 class:list={"lg:px-4"}>{lang === "es" ? "Proyectos" : "Projects"}</H2>
    <ul class="group/opacity">
        {
            projectsSorted.map((project, index) =>
                isLastProject(index) ? (
                    <li>
                        <Article
                            {...project}
                            isMargin={false}
                            class:list={["mb-1"]}
                        />
                    </li>
                ) : (
                    <li>
                        <Article {...project} isMargin={true} />
                    </li>
                )
            )
        }
    </ul>
    <AnchorNavigationText
        href={allProjectsHref}
        class:list={["lg:px-4 py-1"]}
        goBack={false}
    >
        {allProjectsText}
    </AnchorNavigationText>
</Section>
