---
import Article from "@components/article/Article.astro";
import { getCollection } from "astro:content";
import Section from "@components/article/Section.astro";
import type { lang } from "@src/types";

interface Props {
    lang: lang;
}

const { lang } = Astro.props as Props;

const projects = await getCollection("all-projects");
const projectsSorted = projects
    .filter((job) => job.id.startsWith(`${lang}/`))
    .sort((a, b) => {
        return b.data.date - a.data.date;
    });

const isLastProject = (index: number) => {
    return ++index === projectsSorted.length;
};
---

<Section class:list={["content-visibility-auto"]}>
    <ul class="group/opacity">
        {
            projectsSorted.map((project, index) =>
                isLastProject(index) ? (
                    <li>
                        <Article
                            {...project}
                            isMargin={false}
                            class:list={["mb-4"]}
                        />
                    </li>
                ) : (
                    <li>
                        <Article {...project} isMargin={false} />
                    </li>
                )
            )
        }
    </ul>
</Section>
