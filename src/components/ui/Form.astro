---
import H2 from "../headings/H2.astro";
import { actions } from "astro:actions";
import SuccessIcon from "./SuccessIcon.astro";
import Button from "./Button.astro";
const sendResult = Astro.getActionResult(actions.send);
const formSuccess = sendResult && !sendResult.error;

// TODO: Refactor this
// TODO: Improve email input validation
// TODO: Check setTimeout on success popup
// TODO: Translate contact me to spanish
// TODO: Add contact me to spanish page
---

<style>
    input,
    textarea {
        border: 2px solid transparent;
        outline: none;
    }

    .input-state:valid {
        border-color: oklch(0.723 0.219 149.579);
    }
    .input-state:invalid {
        border-color: oklch(0.656 0.241 354.308);
    }

    input:focus,
    textarea:focus {
        border-color: rgb(186 168 255 / var(--tw-bg-opacity, 1));
    }
</style>
<Button class:list={"form-btn"}>Contact me</Button>
<div
    class="form-popup fixed inset-0 z-30 hidden place-items-center backdrop-blur-sm backdrop-brightness-50"
>
    <div
        class=`flex flex-col w-full max-w-[95%] sm:max-w-lg bg-gray-900 rounded-lg p-4 shadow-sm bg-gradient-to-br from-secondary from-[-75%] via-primary to-secondary to-[175%] ${formSuccess ? 'success-hidden': ''}`
    >
        <H2 class="text-white font-bold text-lg">Contact me</H2>
        <form action={actions.send} method="POST" class=`relative`>
            <div class=`${formSuccess && 'opacity-0'}`>
                <div class="flex flex-col gap-4">
                    <div class="flex flex-col sm:flex-row gap-4">
                        <div class="w-full">
                            <label class="text-white block pb-2" for="name"
                                >Name</label
                            >
                            <input
                                placeholder="Your name"
                                class="input-name w-full rounded-md bg-secondary text-white px-4 py-1"
                                type="text"
                                name="name"
                                required
                            />
                        </div>
                        <div class="w-full">
                            <label class="text-white block pb-2" for="name"
                                >Surname</label
                            >
                            <input
                                placeholder="Your surname (optional)"
                                class="input-surname w-full bg-secondary rounded-md text-white px-2 py-1"
                                type="text"
                                name="surname"
                            />
                        </div>
                    </div>
                    <div>
                        <label class="text-white block pb-2" for="name"
                            >Email</label
                        >
                        <input
                            placeholder="Your email"
                            class="input-email w-full bg-secondary rounded-md text-white px-2 py-1"
                            type="email"
                            name="email"
                            required
                            pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}"
                        />
                    </div>
                </div>
                <div class="mt-4">
                    <label class="text-white block pb-2" for="message"
                        >Message</label
                    >
                    <textarea
                        placeholder="Your message"
                        class="input-msg w-full bg-secondary rounded-md text-white px-2 py-1"
                        id="message"
                        name="message"
                        required></textarea>
                </div>
                <div class="mt-4 flex justify-end">
                    <Button type="submit">Submit</Button>
                </div>
            </div>
        </form>
    </div>
</div>
<div
    class="success-popup fixed inset-0 z-30 hidden place-items-center backdrop-blur-sm backdrop-brightness-50"
>
    <div
        class=`flex flex-col w-full max-w-[95%] sm:max-w-lg bg-gray-900 rounded-lg p-4 shadow-sm bg-gradient-to-br from-secondary from-[-75%] via-primary to-secondary to-[175%] `
    >
        <H2 class="text-white font-bold text-lg">Contact me</H2>
        <div class="py-28 mx-auto">
            <SuccessIcon />
        </div>
    </div>
</div>
<style>
    div.success-icon {
        display: grid;
    }
</style>
<script>
    import { addValidationClasses } from "../../utils/formValidation";
    const inputName = document.querySelector(".input-name") as HTMLInputElement;
    const inputEmail = document.querySelector(
        ".input-email"
    ) as HTMLInputElement;
    const inputMsg = document.querySelector(".input-msg") as HTMLInputElement;
    const requiredInputs = [inputName, inputEmail, inputMsg];
    const formBtn = document.querySelector(".form-btn") as HTMLButtonElement;
    const formPopup = document.querySelector(".form-popup") as HTMLDivElement;
    const successPopup = document.querySelector(
        ".success-popup"
    ) as HTMLDivElement;

    const toggleFormPopup = () => {
        formPopup.classList.toggle("hidden");
        formPopup.classList.toggle("grid");
        formPopup.classList.toggle("success-hidden");
    };
    const toggleSuccessPopup = () => {
        successPopup.classList.toggle("hidden");
        successPopup.classList.toggle("grid");
    };

    requiredInputs.forEach((input) => {
        input.addEventListener("input", () => {
            addValidationClasses(input);
        });
    });

    formBtn.addEventListener("click", toggleFormPopup);

    formPopup.addEventListener("click", (e) => {
        if (e.target === formPopup) toggleFormPopup();
    });

    formPopup.addEventListener("submit", (e) => {
        if (formPopup.classList.contains("success-hidden")) {
            toggleSuccessPopup();
            setTimeout(toggleSuccessPopup, 3000);
        }
    });
</script>
